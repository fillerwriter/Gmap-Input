(function(a,f,i,k){function d(c,b){this.element=c;this.options=a.extend({},j,b);this._defaults=j;this._name=l;this._infoWindow=this._features=this._dblClickTimer=this._drawManager=this._bounds=this._mapcontainer=this._map=null;this.init()}var l="gmapInput",j={startPoint:{lat:41.879535,lon:-87.624333,zoom:7},featureDefaults:{marker:{},polyLine:{},polygon:{}},properties:k,imagePath:"img",featureMaxCount:-1,widgetOptions:[google.maps.drawing.OverlayType.MARKER,google.maps.drawing.OverlayType.POLYLINE,
google.maps.drawing.OverlayType.POLYGON],defaultWidgetOption:null,forceGeoCollection:false,mapOptions:{mapTypeId:google.maps.MapTypeId.ROADMAP}};d.prototype.init=function(){var c=this;this.options.mapState="panning";this._dblClickTimer=k;this._mapcontainer=a(this.element).after('<div class="gmapInputMap"></div>').siblings(".gmapInputMap").get(0);var b={zoom:this.options.startPoint.zoom,center:new google.maps.LatLng(this.options.startPoint.lat,this.options.startPoint.lon),mapTypeId:this.options.mapOptions.mapTypeId,
disableDoubleClickZoom:true};this._map=new google.maps.Map(this._mapcontainer,b);this._features=new FeatureManager({map:this._map,element:this.element,forceGeoCollection:this.options.forceGeoCollection});b=this._features.getLength();if(b>0){this._map.fitBounds(this._features.getBounds());for(var g=0;g<b;g++)this.featureEventsRegister(this._features.getFeatureAt(g))}var b=a.extend({draggable:true},this.options.featureDefaults.marker),g=a.extend({draggable:true},this.options.featureDefaults.polyLine),
h=a.extend({draggable:true},this.options.featureDefaults.polygon);this._drawManager=new google.maps.drawing.DrawingManager({map:this._map,drawingControlOptions:{drawingModes:this.options.widgetOptions,position:google.maps.ControlPosition.TOP_LEFT},markerOptions:b,polylineOptions:g,polygonOptions:h});b="";if(c.options.properties){b+="<form class='map-property-form'>";for(var e in c.options.properties)b+="<div class='"+e+"-wrapper'><label>"+e+":</label><input name='"+e+"-input' class='"+e+"-input' value='"+
c.options.properties[e]+"'/></div>";b+="<div><input type='submit' value='Save' /></form>"}b+="<p><a class='deleteLink' href='#'>Delete</a></p>";this._infoWindow=new google.maps.InfoWindow({content:b});google.maps.event.addListener(this._map,"click",function(a){c.click(a)});google.maps.event.addListener(this._infoWindow,"closeclick",function(){var a=c._features.getCurrentFeature();!a.getPos&&a.setEditable&&a.setEditable(false);c._features.setCurrentFeature(k)});google.maps.event.addListener(this._drawManager,
"overlaycomplete",function(b){var e=b.overlay;b.type==google.maps.drawing.OverlayType.POLYGON&&e.getPath().getLength()<2?e.setMap(null):(c.options.properties&&e.set("geojsonProperties",c.options.properties),c.options.featureMaxCount==1&&c._features.getLength()>0&&c._features.removeAllFeatures(),c._features.addFeature(e),a(c.element).val(JSON.stringify(c._features.getGeoJSON())),this.setDrawingMode(null),c._features.setCurrentFeature(e.get("fmPos")),e.type=b.type,c.featureEventsRegister(e),e.type!=
"marker"&&e.setEditable(true),c.options.properties!=k&&c._openInfoWindow(e))})};d.prototype.version=function(){return"0.2"};d.prototype.getMap=function(){return this._map};d.prototype.getDrawManager=function(){return this._drawManager};d.prototype.getFeatureManager=function(){return this._features};d.prototype.click=function(a,b,g){var h=this;this._dblClickTimer=setTimeout(function(){h._click(a,b,g)},200)};d.prototype._click=function(c,b){if(b==k){var g=this._features.getCurrentFeature();g&&(g.type!=
"marker"&&g.setEditable(false),this._features.setCurrentFeature(null),a(this.element).val(JSON.stringify(this._features.getGeoJSON())))}};d.prototype.doubleclick=function(){clearTimeout(this._dblClickTimer)};d.prototype.rightclick=function(){};d.prototype._openInfoWindow=function(c){var b=this;c==k&&(c=b._feature.getCurrentFeature());var g=c.get("localBounds");b._infoWindow.setPosition(g.getCenter());b._infoWindow.open(b._map);var c=c.get("geojsonProperties"),h;for(h in c)a("."+h+"-input").val(c[h]);
a(".deleteLink").click(function(c){c.preventDefault();c=b._features.getCurrentFeature();b._features.removeFeatureAt(c.get("fmPos"));a(b.element).val(JSON.stringify(b._features.getGeoJSON()));b._infoWindow.close()});a(".map-property-form").submit(function(){var c=b._features.getCurrentFeature(),h={},g;for(g in b.options.properties)h[g]=a("."+g+"-input").val();c.set("geojsonProperties",h);b._features.modifyFeature(c,c.get("fmPos"));b._infoWindow.close();a(b.element).val(JSON.stringify(b._features.getGeoJSON()));
return false})};d.prototype.featureEventsRegister=function(c){var b=this,g=c.get("type");g=="polygon"||g=="polyline"?(g=c.getPath(),google.maps.event.addListener(g,"insert_at",function(){var a=b._features.getCurrentFeature();b._features.modifyFeature(a,a.get("fmPos"))})):g=="marker"&&(c.setDraggable(true),google.maps.event.addListener(c,"dragend",function(){var c=this.get("fmPos");b._features.modifyFeature(this,c);a(b.element).val(JSON.stringify(b._features.getGeoJSON()));b._infoWindow.close()}));
google.maps.event.addListener(c,"click",function(){b._features.setCurrentFeature(this.get("fmPos"));c.get("type")!="marker"&&c.setEditable(true)});google.maps.event.addListener(c,"dblclick",function(){b._features.setCurrentFeature(this.get("fmPos"));b._openInfoWindow(c)})};a.fn[l]=function(c){return this.each(function(){a.data(this,l)||a.data(this,l,new d(this,c))})}})(jQuery,window,document);var GeoJSON=function(a,f){var i=function(a,b,g){var h;switch(a.type){case "Point":b.position=new google.maps.LatLng(a.coordinates[1],a.coordinates[0]);h=new google.maps.Marker(b);g&&h.set("geojsonProperties",g);break;case "MultiPoint":h=[];for(var e=0;e<a.coordinates.length;e++)b.position=new google.maps.LatLng(a.coordinates[e][1],a.coordinates[e][0]),h.push(new google.maps.Marker(b));if(g)for(var d=0;d<h.length;d++)h[d].set("geojsonProperties",g);break;case "LineString":for(var f=[],e=0;e<a.coordinates.length;e++){var d=
a.coordinates[e],j=new google.maps.LatLng(d[1],d[0]);f.push(j)}b.path=f;h=new google.maps.Polyline(b);g&&h.set("geojsonProperties",g);break;case "MultiLineString":h=[];for(e=0;e<a.coordinates.length;e++){for(var f=[],m=0;m<a.coordinates[e].length;m++)d=a.coordinates[e][m],j=new google.maps.LatLng(d[1],d[0]),f.push(j);b.path=f;h.push(new google.maps.Polyline(b))}if(g)for(d=0;d<h.length;d++)h[d].set("geojsonProperties",g);break;case "Polygon":for(var l=[],e=0;e<a.coordinates.length;e++){f=[];for(m=
0;m<a.coordinates[e].length;m++)j=new google.maps.LatLng(a.coordinates[e][m][1],a.coordinates[e][m][0]),f.push(j);l.push(f)}b.paths=l;h=new google.maps.Polygon(b);g&&h.set("geojsonProperties",g);break;case "MultiPolygon":h=[];for(e=0;e<a.coordinates.length;e++){l=[];for(m=0;m<a.coordinates[e].length;m++){f=[];for(d=0;d<a.coordinates[e][m].length;d++)j=new google.maps.LatLng(a.coordinates[e][m][d][1],a.coordinates[e][m][d][0]),f.push(j);l.push(f)}b.paths=l;h.push(new google.maps.Polygon(b))}if(g)for(d=
0;d<h.length;d++)h[d].set("geojsonProperties",g);break;case "GeometryCollection":h=[];if(a.geometries)for(e=0;e<a.geometries.length;e++)h.push(i(a.geometries[e],b,g||null));else h=k('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;default:h=k('Invalid GeoJSON object: Geometry object must be one of "Point", "LineString", "Polygon" or "MultiPolygon".')}return h},k=function(a){return{type:"Error",message:a}},d,l=f||{};switch(a.type){case "FeatureCollection":if(a.features){d=
[];for(var j=0;j<a.features.length;j++)d.push(i(a.features[j].geometry,l,a.features[j].properties))}else d=k('Invalid GeoJSON object: FeatureCollection object missing "features" member.');break;case "GeometryCollection":if(a.geometries){d=[];for(j=0;j<a.geometries.length;j++)d.push(i(a.geometries[j],l,a.geometries[j].properties))}else d=k('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;case "Feature":d=!a.properties||!a.geometry?k('Invalid GeoJSON object: Feature object missing "properties" or "geometry" member.'):
i(a.geometry,l,a.properties);break;case "Point":case "MultiPoint":case "LineString":case "MultiLineString":case "Polygon":case "MultiPolygon":d=a.coordinates?d=i(a,l,a.properties):k('Invalid GeoJSON object: Geometry object missing "coordinates" member.');break;default:d=k('Invalid GeoJSON object: GeoJSON object must be one of "Point", "LineString", "Polygon", "MultiPolygon", "Feature", "FeatureCollection" or "GeometryCollection".')}return d};function FeatureManager(a){this.options=jQuery.extend({},{map:void 0,element:void 0,geojson:void 0,forceGeoCollection:false},a);this._bounds=this._element=this._featureIterator=this._currentFeatureId=this._features=this._map=null;this.init()}
FeatureManager.prototype.init=function(){var a=this;if(this.options.map==void 0)throw"Map must be defined";if(this.options.element==void 0&&this.options.geojson==void 0)throw"Either geojson or element must be defined";this._map=this.options.map;this._features=new google.maps.MVCArray;this._currentFeatureID=void 0;this._featureIterator=0;this._element=this.options.element;this._bounds=new google.maps.LatLngBounds;var f=void 0;if(jQuery(this._element).val()!="")f=jQuery.parseJSON(jQuery(this._element).val());
else if(this.options.geojson!=void 0)f=this.options.geojson;if(f)if(f=GeoJSON(f),f.type=="Error")alert("ERROR");else if(jQuery.isArray(f))for(var i in f)this.addFeature(f[i]);else this.addFeature(f);google.maps.event.addListener(this._features,"insert_at",function(){a._resetInternals()});google.maps.event.addListener(this._features,"remove_at",function(){a._resetInternals()});google.maps.event.addListener(this._features,"set_at",function(){a._resetInternals()})};
FeatureManager.prototype.addFeature=function(a){var f=void 0,i=new google.maps.LatLngBounds;if(a.getPaths){var f="polygon",k=a.getPath();k.forEach(function(a){i.extend(a)})}else a.getPath?(f="polyline",k=a.getPath(),k.forEach(function(a){i.extend(a)})):a.getPosition&&(f="marker",i.extend(a.getPosition()));a.set("type",f);a.set("localBounds",i);a.set("fmPos",this._features.getLength());this._features.push(a);this._bounds.union(i);a.setMap(this._map)};
FeatureManager.prototype.modifyFeature=function(a,f){this._features.getAt(f);var i=new google.maps.LatLngBounds;a.getPath?a.getPath().forEach(function(a){i.extend(a)}):a.getPosition&&i.extend(a.getPosition());a.set("localBounds",i);this._features.setAt(f,a)};FeatureManager.prototype.removeFeatureAt=function(a){this._features.getAt(a).setMap(null);this._features.removeAt(a);jQuery(this).trigger("delete")};
FeatureManager.prototype.removeAllFeatures=function(){this._features.forEach(function(a){a.setMap(null);jQuery(this).trigger("delete")});this._features=new google.maps.MVCArray;this._currentFeatureID=void 0};FeatureManager.prototype._resetInternals=function(){var a=this;this._bounds=new google.maps.LatLngBounds;this._features.forEach(function(f,i){a._bounds.union(f.get("localBounds"));f.set("fmPos",i)})};FeatureManager.prototype.setCurrentFeature=function(a){this._currentFeatureID=a};
FeatureManager.prototype.getCurrentFeature=function(){if(this._currentFeatureID!=null)return this._features.getAt(this._currentFeatureID)};FeatureManager.prototype.getFeatureAt=function(a){return this._features.getAt(a)};FeatureManager.prototype.getFeatures=function(){return this._features.getArray()};FeatureManager.prototype.getLength=function(){return this._features.getLength()};FeatureManager.prototype.getMap=function(){return this._map};FeatureManager.prototype.getElement=function(){return this._element};
FeatureManager.prototype.getBounds=function(){return this._bounds};FeatureManager.prototype.getGeoJSON=function(){var a={},f=this;if(this._features.getLength()==0)a=void 0;else if(this.options.forceGeoCollection==false&&this._features.getLength()==1)a=this._GeoJSONParse(this._features.getAt(0));else{var i=[];this._features.forEach(function(a){i.push(f._GeoJSONParse(a))});a={type:"GeometryCollection",geometries:i}}return a};
FeatureManager.prototype._GeoJSONParse=function(a){var f=a.get("geojsonProperties");if(a.getPaths){var i=[];a.getPaths().forEach(function(a){var d=[];a.forEach(function(a){d.push([a.lng(),a.lat()])});i.push(d)});return{type:"Polygon",coordinates:i,properties:f}}else if(a.getPath)return a=a.getPath(),i=[],a.forEach(function(a){i.push([a.lng(),a.lat()])}),{type:"LineString",coordinates:i,properties:f};else if(a.getPosition)return a=a.getPosition(),{type:"Point",coordinates:[a.lng(),a.lat()],properties:f}};
