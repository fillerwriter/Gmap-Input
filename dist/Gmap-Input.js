(function(a,b,h,k){function d(e,c){this.element=e;this.options=a.extend({},i,c);this._defaults=i;this._name=j;this._infoWindow=this._features=this._dblClickTimer=this._drawManager=this._bounds=this._mapcontainer=this._map=null;this.init()}var j="gmapInput",i={startPoint:{lat:41.879535,lon:-87.624333,zoom:7},properties:k,imagePath:"img",featureMaxCount:-1,widgetOptions:[google.maps.drawing.OverlayType.MARKER,google.maps.drawing.OverlayType.POLYLINE,google.maps.drawing.OverlayType.POLYGON],defaultWidgetOption:null,
forceGeoCollection:false,mapOptions:{mapTypeId:google.maps.MapTypeId.ROADMAP}};d.prototype.init=function(){var e=this;this.options.mapState="panning";this._dblClickTimer=k;this._mapcontainer=a(this.element).after('<div class="gmapInputMap"></div>').siblings(".gmapInputMap").get(0);var c={zoom:this.options.startPoint.zoom,center:new google.maps.LatLng(this.options.startPoint.lat,this.options.startPoint.lon),mapTypeId:this.options.mapOptions.mapTypeId,disableDoubleClickZoom:true};this._map=new google.maps.Map(this._mapcontainer,
c);this._features=new FeatureManager({map:this._map,element:this.element,forceGeoCollection:this.options.forceGeoCollection});c=this._features.getLength();if(c>0){this._map.fitBounds(this._features.getBounds());for(var b=0;b<c;b++)this.featureEventsRegister(this._features.getFeatureAt(b))}this._drawManager=new google.maps.drawing.DrawingManager({map:this._map,drawingControlOptions:{drawingModes:this.options.widgetOptions,position:google.maps.ControlPosition.TOP_LEFT},markerOptions:{draggable:true},
polylineOptions:{editable:true}});c="";if(e.options.properties){c+="<form class='map-property-form'>";for(var f in e.options.properties)c+="<div class='"+f+"-wrapper'><label>"+f+":</label><input name='"+f+"-input' class='"+f+"-input' value='"+e.options.properties[f]+"'/></div>";c+="<div><input type='submit' value='Save' /></form>"}c+="<p><a class='deleteLink' href='#'>Delete</a></p>";this._infoWindow=new google.maps.InfoWindow({content:c});google.maps.event.addListener(this._map,"click",function(a){e.click(a)});
google.maps.event.addListener(this._drawManager,"overlaycomplete",function(c){var f=c.overlay;e.options.properties&&f.set("geojsonProperties",e.options.properties);e._features.addFeature(f);a(e.element).val(JSON.stringify(e._features.getGeoJSON()));this.setDrawingMode(null);e._features.setCurrentFeature(f.get("fmPos"));f.type=c.type;e.featureEventsRegister(f);f.type!="marker"&&f.setEditable(true)})};d.prototype.version=function(){return"0.2"};d.prototype.getMap=function(){return this._map};d.prototype.click=
function(a,c,b){var f=this;this._dblClickTimer=setTimeout(function(){f._click(a,c,b)},200)};d.prototype._click=function(e,c){if(c==k){var b=this._features.getCurrentFeature();b&&(b.type!="marker"&&b.setEditable(false),this._features.setCurrentFeature(null),a(this.element).val(JSON.stringify(this._features.getGeoJSON())))}};d.prototype.doubleclick=function(){clearTimeout(this._dblClickTimer)};d.prototype.rightclick=function(){};d.prototype.mouseup=function(e,c){this.data.replaceCoordinate(e.latLng.lng(),
e.latLng.lat(),e.featureID,c.getFeatureID()-1);a(this.element).val(this.data.stringify())};d.prototype.featureEventsRegister=function(e){var c=this,b=e.get("type");b=="polygon"||b=="polyline"?(b=e.getPath(),google.maps.event.addListener(b,"insert_at",function(){var a=c._features.getCurrentFeature();c._features.modifyFeature(a,a.get("fmPos"))})):b=="marker"&&google.maps.event.addListener(e,"dragend",function(){var e=this.get("fmPos");c._features.modifyFeature(this,e);a(c.element).val(JSON.stringify(c._features.getGeoJSON()));
c._infoWindow.close()});google.maps.event.addListener(e,"click",function(){c._features.setCurrentFeature(this.get("fmPos"));e.get("type")!="marker"&&e.setEditable(true)});google.maps.event.addListener(e,"dblclick",function(){var e=this.get("localBounds");c._infoWindow.setPosition(e.getCenter());c._infoWindow.open(c._map);var e=this.get("geojsonProperties"),b;for(b in e)a("."+b+"-input").val(e[b]);a(".deleteLink").click(function(e){e.preventDefault();e=c._features.getCurrentFeature();c._features.removeFeatureAt(e.get("fmPos"));
a(c.element).val(JSON.stringify(c._features.getGeoJSON()));c._infoWindow.close()});a(".map-property-form").submit(function(){var e=c._features.getCurrentFeature(),b={},f;for(f in c.options.properties)b[f]=a("."+f+"-input").val();e.set("geojsonProperties",b);c._features.modifyFeature(e,e.get("fmPos"));c._infoWindow.close();a(c.element).val(JSON.stringify(c._features.getGeoJSON()));return false})})};a.fn[j]=function(e){return this.each(function(){a.data(this,j)||a.data(this,j,new d(this,e))})}})(jQuery,
window,document);var GeoJSON=function(a,b){var h=function(a,c,b){var f;switch(a.type){case "Point":c.position=new google.maps.LatLng(a.coordinates[1],a.coordinates[0]);f=new google.maps.Marker(c);b&&f.set("geojsonProperties",b);break;case "MultiPoint":f=[];for(var g=0;g<a.coordinates.length;g++)c.position=new google.maps.LatLng(a.coordinates[g][1],a.coordinates[g][0]),f.push(new google.maps.Marker(c));if(b)for(var d=0;d<f.length;d++)f[d].set("geojsonProperties",b);break;case "LineString":for(var i=[],g=0;g<a.coordinates.length;g++){var d=
a.coordinates[g],j=new google.maps.LatLng(d[1],d[0]);i.push(j)}c.path=i;f=new google.maps.Polyline(c);b&&f.set("geojsonProperties",b);break;case "MultiLineString":f=[];for(g=0;g<a.coordinates.length;g++){for(var i=[],l=0;l<a.coordinates[g].length;l++)d=a.coordinates[g][l],j=new google.maps.LatLng(d[1],d[0]),i.push(j);c.path=i;f.push(new google.maps.Polyline(c))}if(b)for(d=0;d<f.length;d++)f[d].set("geojsonProperties",b);break;case "Polygon":for(var m=[],g=0;g<a.coordinates.length;g++){i=[];for(l=
0;l<a.coordinates[g].length;l++)j=new google.maps.LatLng(a.coordinates[g][l][1],a.coordinates[g][l][0]),i.push(j);m.push(i)}c.paths=m;f=new google.maps.Polygon(c);b&&f.set("geojsonProperties",b);break;case "MultiPolygon":f=[];for(g=0;g<a.coordinates.length;g++){m=[];for(l=0;l<a.coordinates[g].length;l++){i=[];for(d=0;d<a.coordinates[g][l].length;d++)j=new google.maps.LatLng(a.coordinates[g][l][d][1],a.coordinates[g][l][d][0]),i.push(j);m.push(i)}c.paths=m;f.push(new google.maps.Polygon(c))}if(b)for(d=
0;d<f.length;d++)f[d].set("geojsonProperties",b);break;case "GeometryCollection":f=[];if(a.geometries)for(g=0;g<a.geometries.length;g++)f.push(h(a.geometries[g],c,b||null));else f=k('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;default:f=k('Invalid GeoJSON object: Geometry object must be one of "Point", "LineString", "Polygon" or "MultiPolygon".')}return f},k=function(a){return{type:"Error",message:a}},d,j=b||{};switch(a.type){case "FeatureCollection":if(a.features){d=
[];for(var i=0;i<a.features.length;i++)d.push(h(a.features[i].geometry,j,a.features[i].properties))}else d=k('Invalid GeoJSON object: FeatureCollection object missing "features" member.');break;case "GeometryCollection":if(a.geometries){d=[];for(i=0;i<a.geometries.length;i++)d.push(h(a.geometries[i],j,a.geometries[i].properties))}else d=k('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;case "Feature":d=!a.properties||!a.geometry?k('Invalid GeoJSON object: Feature object missing "properties" or "geometry" member.'):
h(a.geometry,j,a.properties);break;case "Point":case "MultiPoint":case "LineString":case "MultiLineString":case "Polygon":case "MultiPolygon":d=a.coordinates?d=h(a,j,a.properties):k('Invalid GeoJSON object: Geometry object missing "coordinates" member.');break;default:d=k('Invalid GeoJSON object: GeoJSON object must be one of "Point", "LineString", "Polygon", "MultiPolygon", "Feature", "FeatureCollection" or "GeometryCollection".')}return d};function FeatureManager(a){this.options=jQuery.extend({},{map:void 0,element:void 0,geojson:void 0,forceGeoCollection:false},a);this._bounds=this._element=this._featureIterator=this._currentFeatureId=this._features=this._map=null;this.init()}
FeatureManager.prototype.init=function(){var a=this;if(this.options.map==void 0)throw"Map must be defined";if(this.options.element==void 0&&this.options.geojson==void 0)throw"Either geojson or element must be defined";this._map=this.options.map;this._features=new google.maps.MVCArray;this._currentFeatureID=void 0;this._featureIterator=0;this._element=this.options.element;this._bounds=new google.maps.LatLngBounds;var b=void 0;if(jQuery(this._element).val()!="")b=jQuery.parseJSON(jQuery(this._element).val());
else if(this.options.geojson!=void 0)b=this.options.geojson;if(b)if(b=GeoJSON(b),b.type=="Error")alert("ERROR");else if(jQuery.isArray(b))for(var h in b)this.addFeature(b[h]);else this.addFeature(b);google.maps.event.addListener(this._features,"insert_at",function(){a._resetInternals()});google.maps.event.addListener(this._features,"remove_at",function(){a._resetInternals()});google.maps.event.addListener(this._features,"set_at",function(){a._resetInternals()})};
FeatureManager.prototype.addFeature=function(a){var b=void 0,h=new google.maps.LatLngBounds;if(a.getPaths){var b="polygon",k=a.getPath();k.forEach(function(a){h.extend(a)})}else a.getPath?(b="polyline",k=a.getPath(),k.forEach(function(a){h.extend(a)})):a.getPosition&&(b="marker",h.extend(a.getPosition()));a.set("type",b);a.set("localBounds",h);a.set("fmPos",this._features.getLength());this._features.push(a);this._bounds.union(h);a.setMap(this._map)};
FeatureManager.prototype.modifyFeature=function(a,b){this._features.getAt(b);var h=new google.maps.LatLngBounds;a.getPath?a.getPath().forEach(function(a){h.extend(a)}):a.getPosition&&h.extend(a.getPosition());a.set("localBounds",h);this._features.setAt(b,a)};FeatureManager.prototype.removeFeatureAt=function(a){this._features.getAt(a).setMap(null);this._features.removeAt(a)};
FeatureManager.prototype.removeAllFeatures=function(){for(var a in this._features)this._features[a].setMap(null);this._features=new google.maps.MVCArray;this._currentFeatureID=void 0};FeatureManager.prototype._resetInternals=function(){var a=this;this._bounds=new google.maps.LatLngBounds;this._features.forEach(function(b,h){a._bounds.union(b.get("localBounds"));b.set("fmPos",h)})};FeatureManager.prototype.setCurrentFeature=function(a){this._currentFeatureID=a};
FeatureManager.prototype.getCurrentFeature=function(){if(this._currentFeatureID!=null)return this._features.getAt(this._currentFeatureID)};FeatureManager.prototype.getFeatureAt=function(a){return this._features.getAt(a)};FeatureManager.prototype.getFeatures=function(){return this._features.getArray()};FeatureManager.prototype.getLength=function(){return this._features.getLength()};FeatureManager.prototype.getMap=function(){return this._map};FeatureManager.prototype.getElement=function(){return this._element};
FeatureManager.prototype.getBounds=function(){return this._bounds};FeatureManager.prototype.getGeoJSON=function(){var a={},b=this;if(this._features.getLength()==0)a=void 0;else if(this.options.forceGeoCollection==false&&this._features.getLength()==1)a=this._GeoJSONParse(this._features.getAt(0));else{var h=[];this._features.forEach(function(a){h.push(b._GeoJSONParse(a))});a={type:"GeometryCollection",geometries:h}}return a};
FeatureManager.prototype._GeoJSONParse=function(a){var b=a.get("geojsonProperties");if(a.getPaths){var h=[];a.getPaths().forEach(function(a){var b=[];a.forEach(function(a){b.push([a.lng(),a.lat()])});h.push(b)});return{type:"Polygon",coordinates:h,properties:b}}else if(a.getPath)return a=a.getPath(),h=[],a.forEach(function(a){h.push([a.lng(),a.lat()])}),{type:"LineString",coordinates:h,properties:b};else if(a.getPosition)return a=a.getPosition(),{type:"Point",coordinates:[a.lng(),a.lat()],properties:b}};
