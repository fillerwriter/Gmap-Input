(function(a,c,g,j){function b(e,d){this.element=e;this.options=a.extend({},h,d);this._defaults=h;this._name=k;this._infoWindow=this._features=this._dblClickTimer=this._drawManager=this._bounds=this._mapcontainer=this._map=null;this.init()}var k="gmapInput",h={startPoint:{lat:41.879535,lon:-87.624333,zoom:7},properties:j,imagePath:"img",featureMaxCount:-1,widgetOptions:[google.maps.drawing.OverlayType.MARKER,google.maps.drawing.OverlayType.POLYLINE,google.maps.drawing.OverlayType.POLYGON],defaultWidgetOption:null,
forceGeoCollection:false,mapOptions:{mapTypeId:google.maps.MapTypeId.ROADMAP}};b.prototype.init=function(){var e=this;this.options.mapState="panning";this._dblClickTimer=j;this._mapcontainer=a(this.element).after('<div class="gmapInputMap"></div>').siblings(".gmapInputMap").get(0);var d={zoom:this.options.startPoint.zoom,center:new google.maps.LatLng(this.options.startPoint.lat,this.options.startPoint.lon),mapTypeId:this.options.mapOptions.mapTypeId,disableDoubleClickZoom:true};this._map=new google.maps.Map(this._mapcontainer,
d);this._features=new FeatureManager({map:this._map,element:this.element,forceGeoCollection:this.options.forceGeoCollection});d=this._features.getLength();if(d>0){this._map.fitBounds(this._features.getBounds());for(var b=0;b<d;b++)this.featureEventsRegister(this._features.getFeatureAt(b))}this._drawManager=new google.maps.drawing.DrawingManager({map:this._map,drawingControlOptions:{drawingModes:this.options.widgetOptions,position:google.maps.ControlPosition.TOP_LEFT},markerOptions:{draggable:true},
polylineOptions:{editable:true}});d="";if(e.options.properties){d+="<form class='map-property-form'>";for(var f in e.options.properties)d+="<div class='"+f+"-wrapper'><label>"+f+":</label><input name='"+f+"-input' class='"+f+"-input' value='"+e.options.properties[f]+"'/></div>";d+="<div><input type='submit' value='Save' /></form>"}d+="<p><a class='deleteLink' href='#'>Delete</a></p>";this._infoWindow=new google.maps.InfoWindow({content:d});google.maps.event.addListener(this._map,"click",function(a){e.click(a)});
google.maps.event.addListener(this._infoWindow,"closeclick",function(){var a=e._features.getCurrentFeature();!a.getPos&&a.setEditable&&a.setEditable(false);e._features.setCurrentFeature(j)});google.maps.event.addListener(this._drawManager,"overlaycomplete",function(d){var f=d.overlay;d.type==google.maps.drawing.OverlayType.POLYGON&&f.getPath().getLength()<2?f.setMap(null):(e.options.properties&&f.set("geojsonProperties",e.options.properties),e.options.featureMaxCount==1&&e._features.getLength()>0&&
e._features.removeAllFeatures(),e._features.addFeature(f),a(e.element).val(JSON.stringify(e._features.getGeoJSON())),this.setDrawingMode(null),e._features.setCurrentFeature(f.get("fmPos")),f.type=d.type,e.featureEventsRegister(f),f.type!="marker"&&f.setEditable(true),e.options.properties!=j&&e._openInfoWindow(f))})};b.prototype.version=function(){return"0.2"};b.prototype.getMap=function(){return this._map};b.prototype.getDrawManager=function(){return this._drawManager};b.prototype.getFeatureManager=
function(){return this._features};b.prototype.click=function(a,d,b){var f=this;this._dblClickTimer=setTimeout(function(){f._click(a,d,b)},200)};b.prototype._click=function(e,d){if(d==j){var b=this._features.getCurrentFeature();b&&(b.type!="marker"&&b.setEditable(false),this._features.setCurrentFeature(null),a(this.element).val(JSON.stringify(this._features.getGeoJSON())))}};b.prototype.doubleclick=function(){clearTimeout(this._dblClickTimer)};b.prototype.rightclick=function(){};b.prototype._openInfoWindow=
function(e){var d=this;e==j&&(e=d._feature.getCurrentFeature());var b=e.get("localBounds");d._infoWindow.setPosition(b.getCenter());d._infoWindow.open(d._map);var e=e.get("geojsonProperties"),f;for(f in e)a("."+f+"-input").val(e[f]);a(".deleteLink").click(function(e){e.preventDefault();e=d._features.getCurrentFeature();d._features.removeFeatureAt(e.get("fmPos"));a(d.element).val(JSON.stringify(d._features.getGeoJSON()));d._infoWindow.close()});a(".map-property-form").submit(function(){var e=d._features.getCurrentFeature(),
f={},b;for(b in d.options.properties)f[b]=a("."+b+"-input").val();e.set("geojsonProperties",f);d._features.modifyFeature(e,e.get("fmPos"));d._infoWindow.close();a(d.element).val(JSON.stringify(d._features.getGeoJSON()));return false})};b.prototype.featureEventsRegister=function(e){var d=this,b=e.get("type");b=="polygon"||b=="polyline"?(b=e.getPath(),google.maps.event.addListener(b,"insert_at",function(){var a=d._features.getCurrentFeature();d._features.modifyFeature(a,a.get("fmPos"))})):b=="marker"&&
(e.setDraggable(true),google.maps.event.addListener(e,"dragend",function(){var e=this.get("fmPos");d._features.modifyFeature(this,e);a(d.element).val(JSON.stringify(d._features.getGeoJSON()));d._infoWindow.close()}));google.maps.event.addListener(e,"click",function(){d._features.setCurrentFeature(this.get("fmPos"));e.get("type")!="marker"&&e.setEditable(true)});google.maps.event.addListener(e,"dblclick",function(){d._features.setCurrentFeature(this.get("fmPos"));d._openInfoWindow(e)})};a.fn[k]=function(e){return this.each(function(){a.data(this,
k)||a.data(this,k,new b(this,e))})}})(jQuery,window,document);var GeoJSON=function(a,c){var g=function(a,d,b){var f;switch(a.type){case "Point":d.position=new google.maps.LatLng(a.coordinates[1],a.coordinates[0]);f=new google.maps.Marker(d);b&&f.set("geojsonProperties",b);break;case "MultiPoint":f=[];for(var c=0;c<a.coordinates.length;c++)d.position=new google.maps.LatLng(a.coordinates[c][1],a.coordinates[c][0]),f.push(new google.maps.Marker(d));if(b)for(var i=0;i<f.length;i++)f[i].set("geojsonProperties",b);break;case "LineString":for(var h=[],c=0;c<a.coordinates.length;c++){var i=
a.coordinates[c],k=new google.maps.LatLng(i[1],i[0]);h.push(k)}d.path=h;f=new google.maps.Polyline(d);b&&f.set("geojsonProperties",b);break;case "MultiLineString":f=[];for(c=0;c<a.coordinates.length;c++){for(var h=[],l=0;l<a.coordinates[c].length;l++)i=a.coordinates[c][l],k=new google.maps.LatLng(i[1],i[0]),h.push(k);d.path=h;f.push(new google.maps.Polyline(d))}if(b)for(i=0;i<f.length;i++)f[i].set("geojsonProperties",b);break;case "Polygon":for(var m=[],c=0;c<a.coordinates.length;c++){h=[];for(l=
0;l<a.coordinates[c].length;l++)k=new google.maps.LatLng(a.coordinates[c][l][1],a.coordinates[c][l][0]),h.push(k);m.push(h)}d.paths=m;f=new google.maps.Polygon(d);b&&f.set("geojsonProperties",b);break;case "MultiPolygon":f=[];for(c=0;c<a.coordinates.length;c++){m=[];for(l=0;l<a.coordinates[c].length;l++){h=[];for(i=0;i<a.coordinates[c][l].length;i++)k=new google.maps.LatLng(a.coordinates[c][l][i][1],a.coordinates[c][l][i][0]),h.push(k);m.push(h)}d.paths=m;f.push(new google.maps.Polygon(d))}if(b)for(i=
0;i<f.length;i++)f[i].set("geojsonProperties",b);break;case "GeometryCollection":f=[];if(a.geometries)for(c=0;c<a.geometries.length;c++)f.push(g(a.geometries[c],d,b||null));else f=j('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;default:f=j('Invalid GeoJSON object: Geometry object must be one of "Point", "LineString", "Polygon" or "MultiPolygon".')}return f},j=function(a){return{type:"Error",message:a}},b,k=c||{};switch(a.type){case "FeatureCollection":if(a.features){b=
[];for(var h=0;h<a.features.length;h++)b.push(g(a.features[h].geometry,k,a.features[h].properties))}else b=j('Invalid GeoJSON object: FeatureCollection object missing "features" member.');break;case "GeometryCollection":if(a.geometries){b=[];for(h=0;h<a.geometries.length;h++)b.push(g(a.geometries[h],k,a.geometries[h].properties))}else b=j('Invalid GeoJSON object: GeometryCollection object missing "geometries" member.');break;case "Feature":b=!a.properties||!a.geometry?j('Invalid GeoJSON object: Feature object missing "properties" or "geometry" member.'):
g(a.geometry,k,a.properties);break;case "Point":case "MultiPoint":case "LineString":case "MultiLineString":case "Polygon":case "MultiPolygon":b=a.coordinates?b=g(a,k,a.properties):j('Invalid GeoJSON object: Geometry object missing "coordinates" member.');break;default:b=j('Invalid GeoJSON object: GeoJSON object must be one of "Point", "LineString", "Polygon", "MultiPolygon", "Feature", "FeatureCollection" or "GeometryCollection".')}return b};function FeatureManager(a){this.options=jQuery.extend({},{map:void 0,element:void 0,geojson:void 0,forceGeoCollection:false},a);this._bounds=this._element=this._featureIterator=this._currentFeatureId=this._features=this._map=null;this.init()}
FeatureManager.prototype.init=function(){var a=this;if(this.options.map==void 0)throw"Map must be defined";if(this.options.element==void 0&&this.options.geojson==void 0)throw"Either geojson or element must be defined";this._map=this.options.map;this._features=new google.maps.MVCArray;this._currentFeatureID=void 0;this._featureIterator=0;this._element=this.options.element;this._bounds=new google.maps.LatLngBounds;var c=void 0;if(jQuery(this._element).val()!="")c=jQuery.parseJSON(jQuery(this._element).val());
else if(this.options.geojson!=void 0)c=this.options.geojson;if(c)if(c=GeoJSON(c),c.type=="Error")alert("ERROR");else if(jQuery.isArray(c))for(var g in c)this.addFeature(c[g]);else this.addFeature(c);google.maps.event.addListener(this._features,"insert_at",function(){a._resetInternals()});google.maps.event.addListener(this._features,"remove_at",function(){a._resetInternals()});google.maps.event.addListener(this._features,"set_at",function(){a._resetInternals()})};
FeatureManager.prototype.addFeature=function(a){var c=void 0,g=new google.maps.LatLngBounds;if(a.getPaths){var c="polygon",j=a.getPath();j.forEach(function(a){g.extend(a)})}else a.getPath?(c="polyline",j=a.getPath(),j.forEach(function(a){g.extend(a)})):a.getPosition&&(c="marker",g.extend(a.getPosition()));a.set("type",c);a.set("localBounds",g);a.set("fmPos",this._features.getLength());this._features.push(a);this._bounds.union(g);a.setMap(this._map)};
FeatureManager.prototype.modifyFeature=function(a,c){this._features.getAt(c);var g=new google.maps.LatLngBounds;a.getPath?a.getPath().forEach(function(a){g.extend(a)}):a.getPosition&&g.extend(a.getPosition());a.set("localBounds",g);this._features.setAt(c,a)};FeatureManager.prototype.removeFeatureAt=function(a){this._features.getAt(a).setMap(null);this._features.removeAt(a);jQuery(this).trigger("delete")};
FeatureManager.prototype.removeAllFeatures=function(){this._features.forEach(function(a){a.setMap(null);jQuery(this).trigger("delete")});this._features=new google.maps.MVCArray;this._currentFeatureID=void 0};FeatureManager.prototype._resetInternals=function(){var a=this;this._bounds=new google.maps.LatLngBounds;this._features.forEach(function(c,g){a._bounds.union(c.get("localBounds"));c.set("fmPos",g)})};FeatureManager.prototype.setCurrentFeature=function(a){this._currentFeatureID=a};
FeatureManager.prototype.getCurrentFeature=function(){if(this._currentFeatureID!=null)return this._features.getAt(this._currentFeatureID)};FeatureManager.prototype.getFeatureAt=function(a){return this._features.getAt(a)};FeatureManager.prototype.getFeatures=function(){return this._features.getArray()};FeatureManager.prototype.getLength=function(){return this._features.getLength()};FeatureManager.prototype.getMap=function(){return this._map};FeatureManager.prototype.getElement=function(){return this._element};
FeatureManager.prototype.getBounds=function(){return this._bounds};FeatureManager.prototype.getGeoJSON=function(){var a={},c=this;if(this._features.getLength()==0)a=void 0;else if(this.options.forceGeoCollection==false&&this._features.getLength()==1)a=this._GeoJSONParse(this._features.getAt(0));else{var g=[];this._features.forEach(function(a){g.push(c._GeoJSONParse(a))});a={type:"GeometryCollection",geometries:g}}return a};
FeatureManager.prototype._GeoJSONParse=function(a){var c=a.get("geojsonProperties");if(a.getPaths){var g=[];a.getPaths().forEach(function(a){var b=[];a.forEach(function(a){b.push([a.lng(),a.lat()])});g.push(b)});return{type:"Polygon",coordinates:g,properties:c}}else if(a.getPath)return a=a.getPath(),g=[],a.forEach(function(a){g.push([a.lng(),a.lat()])}),{type:"LineString",coordinates:g,properties:c};else if(a.getPosition)return a=a.getPosition(),{type:"Point",coordinates:[a.lng(),a.lat()],properties:c}};
